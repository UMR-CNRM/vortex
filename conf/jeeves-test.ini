[driver]
pools    = in, delay, retry, process, ignore, out, error
actions  = level, show, update, sleep, reload, active, mute, seton, setoff,
           dayfile, ftput, phase_ftput, cp, scp, phase_scp, route,
           test_bar, test_foo, test_vortex

# number of processes in the pool
maxprocs = 3
# number of tasks before the pool restarts
maxtasks = 1024
# profile to use for a VortexWorker if needed
profile  = research

# if not 0, jeeves exits after being idle `autoexit` seconds
autoexit = 0
# don't sleep more than this even when idle
maxsleep = 5
# enter silent mode after idling silent + maxsleep seconds
silent   = 2
# delete log files older than that (at start)
keeplog  = 10d

# initial time before retrying a failed task, in seconds
rtinit   = 2
# time multiplier for next retry
rtslow   = 1.5
# max wait time between retries
rtceil   = 6
# won't retry above, but move to error
rtstop   = 20


# ---------- pools ---------- #

[pool_in]
path     = depot
active   = True
target   = process
cleaning = False

[pool_out]
path     = done
active   = False
maxitems = 512
maxtime  = 30mn
keepzip  = 3d
periodclean = 5mn
minclean = 1h

[pool_delay]
path     = delay
active   = True
target   = process
cleaning = False

[pool_retry]
path     = retry
active   = True
target   = in
cleaning = False

[pool_process]
path     = run
active   = True
target   = out
cleaning = False

[pool_ignore]
path     = ignore
active   = True

[pool_error]
path     = error
active   = False
maxitems = 128
maxtime  = 30mn
keepzip  = 3d
periodclean = 5mn
minclean = 1h


# ---------- actions ---------- #

[action_dayfile]
active   = True
entry    = dayfile_report
module   = iga.util.async
dispatch = True

[action_ftput]
active   = True
entry    = system_ftput
module   = common.util.async
dispatch = True
options  = attempts,rawftput
attempts = 2
rawftput = False

[action_phase_ftput]
active   = True
entry    = system_ftput
module   = common.util.async
dispatch = True
options  = attempts,phasemode
attempts = 2
phasemode= True

[action_cp]
active   = True
entry    = system_cp
module   = common.util.async
dispatch = True

[action_scp]
active   = True
entry    = system_scp
module   = common.util.async
dispatch = True

[action_phase_scp]
active   = True
entry    = system_scp
module   = common.util.async
dispatch = True
options  = phasemode
phasemode= True

[action_route]
active   = True
entry    = system_route
module   = iga.util.async
dispatch = True
options  = nossh,route_on,report_on
nossh    = True
route_on = True
report_on= False


# ---------- test actions ---------- #

[action_test_foo]
active   = True
entry    = test_foo
module   = sandbox.util.askjeeves
dispatch = True

[action_test_bar]
active   = True
entry    = test_bar
module   = sandbox.util.askjeeves
dispatch = True

[action_test_vortex]
active   = True
entry    = test_vortex
module   = sandbox.util.askjeeves
dispatch = True
