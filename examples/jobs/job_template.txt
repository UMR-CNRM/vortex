#!/usr/bin/python -u
#SBATCH --cpus-per-task=$openmp
#SBATCH --export=NONE
#SBATCH --job-name=$name
#SBATCH --mem=$mem
#SBATCH --nodes=$nnodes
#SBATCH --ntasks-per-node=$ntasks
#SBATCH --partition=$partition
#SBATCH --time=$time
#SBATCH --exclusive
#SBATCH --verbose

# Build time: $create
# Build user: $mkuser

op_suite   = '$suite'
op_suitebg = '$suitebg'
op_vapp    = '$vapp'
op_vconf   = '$vconf'
op_rootdir = '$rootdir/{0:s}/{1:s}/{2:s}'.format(op_suite, op_vapp, op_vconf)
op_jobname = '$name'
op_jobfile = '$file'
op_thisjob = '{0:s}/jobs/{1:s}.py'.format(op_rootdir, op_jobfile)
op_daterun = '$daterun'
op_alarm   = $alarm
op_archive = $archive
op_public  = $public
op_retry   = $retry

oplocals = locals()

import os, sys
sys.stderr = sys.stdout

sys.path.extend([ os.path.realpath(op_rootdir + xpath) for xpath in ('', 'src', 'vortex/src') if os.path.isdir(op_rootdir + xpath) ])

from iga.tools import op
from $package import $task as todo

try:
    t = op.setup(actual=oplocals)
    e = op.setenv(t, actual=oplocals)
    for task in todo.setup(t):
        task.title('starting ' + op_jobname + ' for HH = ' + str(task.ticket.env.DATE.hour))
        task.process()
        task.complete()
    op.complete(t)
except:
    op.rescue(actual=locals())
    raise
finally:
    print 'Bye bye Op...'

