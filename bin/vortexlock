#!/bin/bash

LOCKRETRIES=15
LOCKTIMEMOUT=1
LOCKOLDTIMER=180
LOCKCONTINUE=8
VERBOSE=0
LOCKFILE=foo

RC=0

while getopts r:t:o:c:f:v option
do
    case $option in
    r) LOCKRETRIES=$OPTARG;;
    t) LOCKTIMEMOUT=$OPTARG;;
    o) LOCKOLDTIMER=$OPTARG;;
    c) LOCKCONTINUE=$OPTARG;;
    f) LOCKFILE=$OPTARG;;
    v) VERBOSE=1;;
    \?) RC=1;;
    esac
done

if [[ $VERBOSE -eq 1 ]]; then
    echo vortexlock file=$LOCKFILE retries=$LOCKRETRIES timeout=$LOCKTIMEMOUT oldtimer=$LOCKOLDTIMER continue=$LOCKCONTINUE >&2
fi

if [[ $RC -eq 0 ]]; then
    LOCKED=0
    RETRIES=0
    TMPFILE=$LOCKFILE.tmp.$$
    echo $$ > $TMPFILE
    if [[ -f $LOCKFILE ]]; then
        MODTIME=$(( $(date '+%s') - $(stat -c '%Y' $LOCKFILE) ))
        [[ $VERBOSE -eq 1 ]] && echo "Lock age is $MODTIME"
        if [[ $MODTIME -gt $LOCKOLDTIMER ]]; then
            [[ $VERBOSE -eq 1 ]] && echo "Remove old lock"
            \rm -f $LOCKFILE
            sleep $LOCKCONTINUE
        fi
    fi
    while [[ $LOCKED -eq 0 && $RETRIES -lt $LOCKRETRIES ]]; do
        [[ $VERBOSE -eq 1 ]] && echo "Try $RETRIES lock $LOCKFILE"
        if ln $TMPFILE $LOCKFILE 2>/dev/null; then
            [[ $VERBOSE -eq 1 ]] && echo "Lock taken on $LOCKFILE"
            LOCKED=1
        else
            [[ $VERBOSE -eq 1 ]] && echo "Lock owned by $(<$LOCKFILE)"
            RETRIES=$(($RETRIES+1))
            [[ $RETRIES -lt $LOCKRETRIES ]] && sleep $LOCKTIMEMOUT
        fi
    done
    \rm -f $TMPFILE
    if [[ $LOCKED -eq 0 ]]; then
        RC=2
    fi
fi

exit $RC