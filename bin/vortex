#!/bin/bash

FIFODIR=${FIFODIR:=$HOME/.vortexrc}
FIFOTAG=${FIFOTAG:=$PPID}

ERROPTS=0

while getopts t:d: option; do
   case $option in
   t) FIFOTAG=$OPTARG;;
   d) FIFODIR=$OPTARG;;
   \?) ERROPTS=1;;
   esac
done

shift $(($OPTIND - 1))

if [ $ERROPTS -ne 0 ]; then
  echo "Bad option to vortex command line [ $option ]" >&2
  exit 1
fi

RFIFO="$FIFODIR/fifo.r$FIFOTAG"
WFIFO="$FIFODIR/fifo.w$FIFOTAG"
PFIFO="$FIFODIR/fifo.p$FIFOTAG"
XLOCK="$FIFODIR/fifo.x$FIFOTAG.lock"
VORTEXLOG="$FIFODIR/vortexsh.log.$FIFOTAG"

#lockfile -1 -r 60 $XLOCK

vortexlock -r 30 -f $XLOCK

if [ "$?" == 0 ]; then

  export RC=0

  if [ -f "$PFIFO" ]; then

    XPID=$(< $PFIFO)
    XCMD=$(ps -f -p $XPID | fgrep $XPID | awk '{print $(NF-2)}')
    RCMD=$(which vortexd)
    if [ "$RCMD" != "$XCMD" ]; then
      echo "Expected [$XPID] co-process is not running"
      \rm -f $RFIFO $WFIFO $PFIFO
    fi

  fi

  if [ ! -p "$RFIFO" ]; then

    \rm -f $RFIFO $WFIFO $PFIFO
    mkfifo $RFIFO
    mkfifo $WFIFO
    nohup vortexd $FIFOTAG $FIFODIR </dev/null >> $VORTEXLOG 2>&1 &
    XPID=$(jobs -p %1)
    echo "New vortex shell facility [$XPID] for process [$PPID] and tag [$FIFOTAG]"
    echo $XPID > $PFIFO

  fi

  echo $FIFOTAG $PWD $* > $RFIFO

  if [ -p "$WFIFO" ]; then
    RCREAD=0
    while read MSG; do
      if [[ $RCREAD -eq 0 ]]; then
        RC="$MSG"
        RCREAD=1
      else
        echo "$MSG"
      fi
    done < "$WFIFO"
  fi

  \rm -f $XLOCK
  exit $RC

else

  echo "WARNING: Could not get lock to execute command"
  exit 1

fi
