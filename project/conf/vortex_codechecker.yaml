checkconfigs:
   pystd:  # The checkerconfig name
      label: "code "  # A label that is used when printing error messages
      checkers:  # A list of checker classes to use : the 'type' entry identifies
                 # the checker class to use, other dictionary entry are passed to
                 # the checker class as keyword arguments
         - type: pycodestyle
           max_line_length: 120
           ignore: &PEP8IGN [E401, E402, W503, W504, E741]
   pylong:
      label: "code "
      checkers:
         - type: pycodestyle
           max_line_length: 400
           ignore: *PEP8IGN
   pystrict:
     label: "code "
     checkers:
       - type: pycodestyle
         max_line_length: 120
         ignore: [ W504, ]
   docweak:
      label: "doc  "
      checkers:
         - type: pydocstyle
           convention: pep257
           # Idealy, D202, D204, D205 and D400 should be checked but there is a lot
           # of work !
           ignore: [D102, D103, D105, D107, D200, D202, D204, D205, D400, D401, D402]
   docstrict:
      label: "doc  "
      checkers:
         - type: pydocstyle
           convention: pep257
           # Idealy, D204, D205 and D400 should be checked but there is a lot
           # of work !
           ignore: [D105, D107, D200, D204, D205, D400, D401, D402]
   astrovtx:
      label: "astro"
      checkers:
         - type: astroidcheck
           importuse_overall_whitelist: &IMP_O_WL
            - bronx.fancies.arguments
            - bronx.fancies.multicfg
            - vortex.tools.addons
            - vortex.tools.folder
            - vortex.tools.lfi
            - vortex.tools.grib
            - vortex.tools.listings
            - vortex.tools.surfex
            - common.tools.gribdiff
            - common.tools.addons
            - common.util.usepygram
            - gco.tools.diggers
            - iga.tools.actions
            - iga.tools.services
            - intairpol.tools.addons
           importuse_local_whitelist: &IMP_L_WL
            site/footprints/loggers.py: [logging, ]
            src/common/algo/ifsroot.py: [common.algo.ifsnaming, ]
            src/vortex/sessions.py: [vortex.gloves, ]
           importblacklist: &IMP_BL
            os:
               - src/vortex/data/containers.py
               - src/vortex/data/providers.py
               - src/vortex/tools/systems.py
               - src/vortex/tools/env.py
               - src/vortex/tools/delayedactions.py
               - src/alpha/data/provider.py
               - src/iga/data/providers.py
               - src/sandbox/util/askjeeves.py
            resource: [src/vortex/tools/systems.py, ]
            shutil: [src/vortex/tools/systems.py, ]
           importdeprecated: &IMP_DE
            footprints.loggers: bronx.fancies.loggers
            vortex.tools.date: bronx.stdtypes.date
            vortex.tools.ddhpack: vortex.tools.folder
            vortex.tools.odb: vortex.tools.folder
            vortex.tools.rawfiles: vortex.tools.folder
           builtinblacklist: &BLT_BL
            open:
               why: "use io.open instead in order to improve Python2/3 compatibility"
               whitelist: [src/common/tools/grib.py, ]
   astro:
      label: "astro"
      checkers:
         - type: astroidcheck
           importuse_overall_whitelist: *IMP_O_WL
           importuse_local_whitelist: *IMP_L_WL
           importdeprecated: *IMP_DE
           builtinblacklist: *BLT_BL

places:
   site_mf:  # The place nickname
      path: site/mf  # The path to the place (relative to the vortex repository root)
      footprints_detect: true  # Do we need to look for footprint definitions ?
      checkconfigs:  # List of checkconfig (see above) to apply on this place
         - astro
         - pystd
         - docstrict
   site_ec:
     path: site/ecmwf_system
     footprints_detect: true
     checkconfigs:
         - astro
         - pystd
         - docstrict
   site_jeeves:
      path: site/jeeves
      checkconfigs:
         - astro
         - pystd
         - docweak
   site:
     path: site
     checkconfigs:
       - astro
       - pystrict
       - docstrict
   src:
      path: src
      footprints_detect: true
      checkconfigs:
         - astrovtx
         - pystd
         - docweak
   tests_fp:
     path: tests/tests_footprints
     footprints_detect: false
     checkconfigs:
       - pystrict
   tests_bronx:
     path: tests/tests_bronx
     footprints_detect: false
     checkconfigs:
       - pystrict
   tests_arpifs_listings:
     path: tests/tests_arpifs_listings
     footprints_detect: false
     checkconfigs:
       - pystrict
   tests_tnt:
     path: tests/tests_tnt
     footprints_detect: false
     checkconfigs:
       - pystrict
   tests_taylorism:
     path: tests/tests_taylorism
     footprints_detect: false
     checkconfigs:
       - pystrict
   tests:
     path: tests
     footprints_detect: true
     checkconfigs:
       - pylong
   bin:
      path: bin
      footprints_detect: true
      checkconfigs:
         - astro
         - pylong
         - docweak
   project:
      path: project
      checkconfigs:
         - astro
         - pystd
         - docweak
 